/*! Switches v3.0.0 WBC*/
/*
 * switches mixins
 *
 */

@brand: WBC;


//////////////////////////////////////| switches mixin
._switches( @brand ) {

	/*
	 *  SETTINGS
	 */
	.getBrand() {
		@switches-fontcolor: #fff;

		@switches-BorderWidth: 2px;
		@switches-Gap: 6px;
	}
	.getBrand() when (@brand = BOM) {}
	.getBrand() when (@brand = BSA) {}
	.getBrand() when (@brand = STG) {
		@switches-fontcolor: @color-F;
	}
	.getBrand() when (@brand = WBC) {}
	.getBrand() when (@brand = WBG) {}
	.getBrand() when (@brand = BT) {}
	.getBrand();


	//////////////////////////////////////| SWITCHES
	.switch {
		&:extend(.clearfix all);

		position: relative;
		display: inline-table;
		vertical-align: middle;
		margin-right: 18px;

		._switches-size( medium ); //default

		&:hover {
			cursor: pointer;
		}
	}

	// Screenreader only text
	.switch-sronly {
		.sr-only();
	}

	// Input
	.switch-input {
		position: absolute;
		z-index: -1; //put the input behind the label
		opacity: 0; //hide

		// Focussed
		&:focus ~ .switch-toggle {
			.outline();
		}

		// Hovered
		&:hover ~ .switch-toggle {
			outline: none;
		}
	}

	// Disabled
	// - Nb. IE fieldset support
	.switch-input:disabled ~ .switch-text,
	fieldset[disabled] .switch-text {
		cursor: not-allowed;
		color: @color-Muted;
	}
	.switch-input:disabled ~ .switch-toggle ,
	fieldset[disabled] .switch-toggle {
		cursor: not-allowed;
		opacity: .5;
	}

	// Text
	.switch-text {
		display: table-cell;
		vertical-align: middle;
		white-space: normal;
		position: relative;
		padding-right: 6px; //gap
	}

	// Toggle (groove)
	.switch-toggle {
		display: block;
		position: absolute;
		right: 0;
		top: 0;
		z-index: 1;
		border: @switches-BorderWidth solid @color-Border;
		background-color: #fff;
		overflow: hidden;
		line-height: 1.5;
		transition: border 0.3s ease, background 0.3s ease;
		user-select: none;

		// Knob
		&:after {
			content: '';
			display: block;
			position: absolute;
			left: 0;
			top: 0;
			border-radius: 50%;
			background-color: #fff;
			box-shadow: 3px 0 6px 0 rgba(0, 0, 0, 0.3);
			transition: all 0.3s ease;
		}

		// Switched
		.switch-input:checked ~ & {
			border-color: @color-Hero;
			background-color: @color-Hero;

			// Knob
			&:after {
				left: 100%; //to right edge
				transform: translateX(-100%); //pull back off the right edge
				box-shadow: -3px 0 6px 0 rgba(0, 0, 0, 0.3); //flip shadow
			}

			.switch-toggle-off { opacity: 0; } //hide
			.switch-toggle-on { opacity: 1; } //show
		}
	}

	// Switch (Off/On) label
	[class*="switch-toggle-"] {
		color: @color-Text;
		position: absolute;
		text-align: center;
		transition: opacity 0.3s ease;
		padding-left: 4px;
		padding-right: 4px;
	}
	.switch-toggle-on {
		opacity: 0; //hide (assuming input is off by default)
		left: 0;
		color: @switches-fontcolor;
	}
	.switch-toggle-off { right: 0; }



	//////////////////////////////////////| SIZING
	.switch-small {
		._switches-size( small );
	}
	.switch-large {
		._switches-size( large );
	}
	.switch-xlarge {
		._switches-size( xlarge );
	}

	// This breakpoint and up
	@media (min-width: @screen-sm) {
		.switch-small-sm {
			._switches-size( small );
		}
		.switch-medium-sm {
			._switches-size( medium );
		}
		.switch-large-sm {
			._switches-size( large );
		}
		.switch-xlarge-sm {
			._switches-size( xlarge );
		}
	}
	@media (min-width: @screen-md) {
		.switch-small-md {
			._switches-size( small );
		}
		.switch-medium-md {
			._switches-size( medium );
		}
		.switch-large-md {
			._switches-size( large );
		}
		.switch-xlarge-md {
			._switches-size( xlarge );
		}
	}
	@media (min-width: @screen-lg) {
		.switch-small-lg {
			._switches-size( small );
		}
		.switch-medium-lg {
			._switches-size( medium );
		}
		.switch-large-lg {
			._switches-size( large );
		}
		.switch-xlarge-lg {
			._switches-size( xlarge );
		}
	}

	// This breakpoint only
	@media (max-width: (@screen-sm - 1)) {
		.switch-small-xs-only {
			._switches-size( small );
		}
		.switch-medium-xs-only {
			._switches-size( medium );
		}
		.switch-large-xs-only {
			._switches-size( large );
		}
		.switch-xlarge-xs-only {
			._switches-size( xlarge );
		}
	}
	@media (min-width: @screen-sm) and (max-width: (@screen-md - 1)) {
		.switch-small-sm-only {
			._switches-size( small );
		}
		.switch-medium-sm-only {
			._switches-size( medium );
		}
		.switch-large-sm-only {
			._switches-size( large );
		}
		.switch-xlarge-sm-only {
			._switches-size( xlarge );
		}
	}
	@media (min-width: @screen-md) and (max-width: (@screen-lg - 1)) {
		.switch-small-md-only {
			._switches-size( small );
		}
		.switch-medium-md-only {
			._switches-size( medium );
		}
		.switch-large-md-only {
			._switches-size( large );
		}
		.switch-xlarge-md-only {
			._switches-size( xlarge );
		}
	}



	//////////////////////////////////////| OPTIONS
	// Switch on left option
	.switch-flip {
		padding-right: 0; //reset

		.switch-input,
		.switch-toggle {
			right: auto; //reset
			left: 0;
		}
		.switch-text {
			padding-right: 0; //reset
			padding-left: 6px;
		}
	}

	// Block level option
	.switch-block {
		width: 100%;
		margin-right: 0; //reset

		.switch-text {
			width: 100%; //required for IE8, let's just apply for all
		}
	}



	//////////////////////////////////////| IE8
	.ie8 {
		// Switch
		.switch {
			min-height: 0; //reset
			padding-right: 0 !important; //reset
			padding-left: 0 !important; //reset for `.switch-flip`
		}
		// Input
		.switch-input {
			opacity: 1; //show
			position: static; //reset
		}
		// Text
		.switch-text {
			padding-left: 6px !important;
		}
		// Toggle
		.switch-toggle {
			display: none !important; //hide
		}
	}



	//////////////////////////////////////| PRINT
	@media print {
		.switch {
			height: auto !important;
		}
		.switch-input {
			position: static;
			opacity: 1; //show
		}
		.switch-toggle {
			display: inline;
			border: 0 none;
			font-size: 0 !important;

			// Knob
			&:after {
				display: none; //hide
			}
		}
		[class*="switch-toggle-"] {
			font-size: 14px;
			left: 14px;
			right: auto;
			top: 0;
		}
	}
}


/*
 * SWITCH SIZES
 *
 * Spit out the width, size and margin of a switch for a spesified size
 */
._switches-size( @size ) {
	.getSize() when (@size = small) {
		._switches-make-switch(30px, 70px, 14px);
	}
	.getSize() when (@size = medium) {
		._switches-make-switch(36px, 80px, 16px);
	}
	.getSize() when (@size = large) {
		._switches-make-switch(42px, 89px, 16px);
	}
	.getSize() when (@size = xlarge) {
		._switches-make-switch(48px, 96px, 18px);
	}
	.getSize();
}


._switches-make-switch(@height, @width, @label-size, @border: @switches-BorderWidth) {
	@knob-height: @height - (@border * 2);
	@knob-width: @height - (@border * 2);
	@groove-width: @width - (@border * 2);

	min-height: @height;
	padding-right: @width;

	&.switch-flip {
		padding-left: @width;
	}

	// Toggle (groove)
	.switch-toggle {
		border-radius: @height;
		height: @height;
		width: @width;

		// Knob
		&:after {
			height: @knob-height;
			width: @knob-width;
		}
	}

	// Switch (Off/On) label
	[class*="switch-toggle-"] {
		line-height: @knob-height;
		font-size: @label-size;
		width: @groove-width - @knob-width;
		width: ~"calc(100% - @{knob-width})"; //IE9+
	}
}


//////////////////////////////////////| switches
._switches( @brand );